Firebase는 백엔드 서버 서비스 혹은 앱 개발 플랫폼으로 볼 수 있다.
기본적으로 의미하는 바는 시간을 절약하는데 사용할 수 있는 서비스이다.

애플리케이션을 만들거나 , 웹사이트를 만들때 사용

Firebase는 많은 플랫폼을 지원한다. 웹을 포함하여 플러터, 리액트 네이티브, ios, 안드로이드,
유니티3D,언리얼엔진용으로 추측되는 C++ SDK도 지원함

 많은 플랫폼을 지원하며 다양한 플랫폼에서 각각 필요한 많은 서비스를 제공한다.

서비스 카테고리를 크게 3가지로 분류함
==========설치==========
firebase를 react-application에 설치해야함
그리고 어떤 코드를 복사 붙여넣기 해야함 > firebase를 우리의 api key로 초기화기 위해서

1. npm install firebase

<application 내부에서 firebase를 초기화 진행>
2. src 폴더안에 firebase.ts 파일을 만들고 알려주는코드를 복사 붙여넣기

이후 원하는 기능을 firebase 콘솔에서 활성화한 다음 코드에서 initialize 해줌
firebase 콘솔에서 활성화는 기능을 추가하는 것을 뜻함

코드에서 initialize 는 firebase.ts에 코드를 추가
-------------------Main-----------------------
빌드 : 빠르게 아이디어를 구현 할 수 있도록 하는 빌드서비스

데이터 베이스 : Cloud FireStore
사용자가 로그인할 수있는 기능 : Authentication
웹 사이트를 배포하기 위한 기능 : Hosting 
사용자가 파일을 클라우드에 업로드할 수있는 기능 : Cloud Storage

-------------------Sub-----------------------
릴리스와 모니터링
application이 충돌할 때 쓰는 Crashlytics와 같은 많은 분석도구들이 포함하여
그외 성능,testing,google analytics, 머신러닝을 위한 기능들이 있다.

Engage 
 application을 다 만든후에 유용하게 사용하게 될것 : in-app messaging, cloud messaging ,a/b testing,remote config
위 기능은 푸시알림 및 테스트, 혹은 어떤 버튼이 더 잘 작동하는지 확인하는 작업 등등 을 말함

----------------------------------------------
Firebase를 쓰면 안되는 상황

사람들은 보통 파이어베이스는 프로토타입 앱 만들때만 좋고 협업에서 쓰기에는 좋지않다고하지만 ="사바사"

하지만 앱이 성장하여 커스텀해야하는 상황에서는 좋지않다
파이어베이스는 많고 멋진 서비스들이 많지만 조금 일반적이다.
즉 , 기본적으로 모든 응용프로그램에 사용될 수 있도록 설계되어있다는 소리이다. (가능한 많은 사람들이 사용할 수 있도록)

하지만 application이 성장하여 많은 사용자가 생기면 병목현상이나 특정부분이 느려진다.
이 부분을 해결하기위해 최적화가 하고싶을 것이다. 
이때 최적화 하려고할때는 때때로 파이어베이스가 너무 작아서 커스텀 서버로 전환하고 싶을 수도있다.


-----------------------------------------------
이번 수업에서는 vite 를 사용

vite = 매우 사용하기 쉬운 개발환경을 제공 > 이툴은 여러가지 다양한 프론트엔드 앱을 개발하는데 도움이 됨
물론 react도 포함 > create react app 을 사용해도 결과는 똑같기 때문에 선택적으로 사용

vite를 사용하여 몇가지 dependency를 설치하고 routing이랑 navigation도 설정하면서 
firebase프로젝트를 만들고 앱의 기본 스타일을 정한다.




=====================================
firebase의 Authentication 작동하는 방식은 , 기본적으론 firebase sdk 와 firebase server이다
이것 2개가 Authentication에서 필요한 쿠키, 토큰 등을 모두 담당한다
어플리케이션에 들어오면 sdk가 쿠키와 토큰을 가져와서 서버와 함께 확인함
	> 사용자의 로그인 여부를 확인해주기 위해

우리는 사용자가 로그인했는지 여부를 friebase가 체크하는 동안 로딩화면을 보여줄 것이다.
	> firebase에서 유저 정보들을 가져올 동안

 
Authentication:












